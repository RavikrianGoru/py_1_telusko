Python is a general purpose high level programming language.
    Guido van Rossum - 1989,(20th Feb 1991)
    + OpenSource
    + Simple & Concise Coding
    + Rich library
    + AI, ML,IoT, DL, DS, NN....

High level = Programmer friendly language not machine level language.
Dynamically typed programming language: Python, JavaScript....
Python word taken from a commedy show name.

Python:
    OOP language feature from C++
    Functional programming features from C
    Scripting features from Perl, Shell
    Modular programming features from Modula3
    + Desktop Apps
    + Web apps
    + Network Apps(Chatting)
    + Games
    + Data Analysis
    + ML, DL, IoT, NN, AI....etc

Google, Facebook, Yahoo, Nasa, DropBox, Netflix...... using python

Customized python is available for different programming languages.
    cpython for C support
    Jython for java support
    IRON python for C# .net
    Anakonda Python for BigData.
    Ruby python for Ruby support
    stackless for concurrency
    pypy python for speed

Python features:
    1) Simple & Eacy to learn (33 reserved words)
    2) Freeware & Open source
    3) High-level
    4) Platform independent(PVM) like JVM in java. PVM is platform dependent
    5) Portable
    6) Dynamically Typed
    7) Procedure & Object oriented
    8) Extensible (Can use non-python code ex: java, c...)
    9) Interpreted: Interpreter tak cares of compilation(No need to compile explicitly)
    10) Embedded: Python code can be embedded in java, C language.
    11) Extensive library support
    Ex: 6 digits OTP

Limitation:
    ML: numpy, pandas,matplotlib....
    - Mobile App Dev: No lib support for mobile apps development.
    - Not to E2E End to End Apps(Enterprise Apps: Banking, Telecom apps)
    - Performance is low as it is interpreted in nature
      JIT concept pypy (python for spped)is added in python virtual machine but still not up to the mark.

Python 2.x vs 3.x:
    3.x is not extension of 2.x
    3.x is completely independent language to add new features but no backward compatibility.

Identifiers: Rules to create identifiers
    1) a-z A-Z 0-9 and _ allowed
    2) should not start with digit
    3) case sensitive
    4) No length limit but not recommended to use large length
    5) Should not used reserved word as identifiers

    x normal variable
    _x protected variable
    __x private variables
    __x__ magic variable language level

Reserved words: python-35, java-53
    'import', 'as',
    'True', 'False', 'None'
    'or', 'and', 'not', 'is', 'with',
    'if', 'else', 'elif',
    'while', 'for', 'from', 'in', 'break', 'continue', 'pass',
    'class', 'def', 'lambda', 'return', 'yield'
    'try', 'raise', 'except', 'finally'
    'global',  'nonlocal', 'assert', 'async', 'await', 'del'

Data type: Type concept is available
    Dynamically typed: no need to declare type explicitly.
    Every thing in python is Object
    Inbuilt data types:
        int
        float
        bool
        complex

        list
        set
        tuple

        frozenset
        dict
        bytes
        bytearray
        range
        None

Common used functions id(), type() print()

Integer values:
    Decimal form or Base 10: (0-9)
    Binary form or Base 2:(0 and 1): starts with 0b or 0B
    Octal form or Base 8:(0-7): starts with 0O or 0o
    Hexa decimal form or Base 16:(0-9,a-f,A-F): start with 0x or 0X

Base conversion functions:
    bin()
    oct()
    hex()

Floating values:
    Only decimal form 123.456
    exponential from 123456e-3, 12e3, 123456E-3, 12E3

Complex data types:
    a+bj here a is real part , b is imaginary part and j/J value is squar root of -1 or j^2 = -1

    a  real part can be represented in binary/octal/hexa form
    b imaginary part can be represented in only decimal form
    we can perform arithmetic operations with complex numbers.






